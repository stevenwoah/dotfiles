################################################################################
# Software Compliance
################################################################################

# You'll need a few things before this will work:
############## Fedora/CentOS ###################
# 1. stow
# 2. git
#  For ponysay
# 3. texinfo
# 4. python36
#  For exa:
# 5. rust
# 6. cmake
# 7. cargo
# 8. libgit2
# 9. zlib-devel
################### Ubuntu #####################
# 1. stow
# 2. git
#  For ponysay
# 3. texinfo
# 4. python3
#################### Arch ######################
# 1. stow
# 2. git

PREREQS_VERSION="201907-04"

function install_prereqs_linux() {
  egrep -i '(fedora|centos)' /etc/os-release && install_prereqs_linux_redhat
  egrep -i 'ubuntu' /etc/os-release && install_prereqs_linux_ubuntu
  egrep -i '(arch|manjaro)' /etc/os-release && install_prereqs_linux_arch

  # Update build # to prevent the prereq check happening too often
  echo -n "${PREREQS_VERSION}" > ${PREREQS}
}

function install_prereqs_linux_redhat() {
  echo "Installing prerequisites ..."
  sudo zsh << EOF
curl -Lq https://download.opensuse.org/repositories/shells:zsh-users:zsh-syntax-highlighting/CentOS_7/shells:zsh-users:zsh-syntax-highlighting.repo > /etc/yum.repos.d/zsh-syntax-highlighting.repo
EOF

  sudo yum install -y centos-release-scl

  sudo yum-config-manager --enable rhel-server-rhscl-7-rpms

  sudo yum install -y \
    devtoolset-8 \
    fortune-mod \
    gcc-c++ \
    glide \
    golang \
    libstdc++-devel \
    ncurses-devel \
    python-devel \
    python36-devel \
    zsh-syntax-highlighting

  # Make sure we have GhettoForge
  if ! [ -f /etc/yum.repos.d/gf.repo ]; then
    sudo rpm -Uvh --reinstall http://mirror.ghettoforge.org/distributions/gf/gf-release-latest.gf.el7.noarch.rpm
    rpm --import http://mirror.ghettoforge.org/distributions/gf/RPM-GPG-KEY-gf.el7
  fi

  sudo yum install -y \
    --enablerepo=gf-plus \
    zsh

  # SourceCodePro+Powerline+Awesome Font for Powerlevel10k
  PA_FONT=~/.fonts/SourceCodePro+Powerline+Awesome+Regular.ttf
  if ! [ -f ${PA_FONT} ]; then
    mkdir -p ~/.fonts
    curl -Lq \
      https://github.com/Falkor/dotfiles/raw/master/fonts/SourceCodePro%2BPowerline%2BAwesome%2BRegular.ttf \
      > ${PA_FONT}
    fc-cache -v
    fc-cache-64 -v
  fi

  # Powerlevel10k
  do_git_update ~/.oh-my-zsh/custom/themes/powerlevel10k https://github.com/romkatv/powerlevel10k.git

  # ponysay
  if ! [ -d ~/ponysay ]; then
    ( git clone https://github.com/erkin/ponysay ~/ponysay && \
      cd ~/ponysay && \
      python3 setup.py --freedom=partial --private install && \
      /bin/mv -f ~/.local/bin/pony* ~/bin/ )
  else
    ( cd ~/ponysay && \
      git pull && \
      python3 setup.py --freedom=partial --private install && \
      /bin/mv -f ~/.local/bin/pony* ~/bin/ )
  fi

  # exa
  if ! cmd_exists exa; then
    ( git clone https://github.com/ogham/exa.git ~/exa && \
      cd ~/exa && \
      cargo build --release && \
      /bin/mv -f ./target/release/exa ~/bin/ )
  fi

  # vim8
  if ! [ -d ~/.local/vim ]; then
    git clone https://github.com/vim/vim.git ~/vim && \
      cd ~/vim && \
      ./configure \
        --disable-darwin \
        --disable-nls \
        --enable-cscope \
        --enable-gui=no \
        --enable-multibyte  \
        --enable-python3interp \
        --enable-rubyinterp \
        --prefix=${HOME}/.local/vim \
        --with-features=huge  \
        --with-python-config-dir=/usr/lib/python3.6/config \
        --with-tlib=ncurses \
        --without-x && \
      make && \
      make install
  fi

  # YouCompleteMe
  YCM_FLAGS=(--clang-completer --go-completer --rust-completer)
  do_git_update ~/.vim/bundle/YouCompleteMe https://github.com/ycm-core/YouCompleteMe &&
    ( cd ~/.vim/bundle/YouCompleteMe && \
      git submodule update --init --recursive && \
      source /opt/rh/devtoolset-8/enable && \
      python3 ./install.py ${YCM_FLAGS[@]} \
    )

  install_prereqs_common
}

function install_prereqs_linux_ubuntu() {
  echo "Installing prerequisites ..."
  sudo apt install -y \
    exa \
    fortune-mod \
    g++ \
    golang \
    golang-glide \
    golang-golang-x-tools \
    libstdc++-9-dev \
    libncurses-dev \
    python-dev \
    python3-dev \
    vim-youcompleteme \
    zsh-syntax-highlighting

  install_prereqs_common

  # SourceCodePro+Powerline+Awesome Font for Powerlevel10k
  PA_FONT=~/.fonts/SourceCodePro+Powerline+Awesome+Regular.ttf
  if ! [ -f ${PA_FONT} ]; then
    mkdir -p ~/.fonts
    curl -Lq \
      https://github.com/Falkor/dotfiles/raw/master/fonts/SourceCodePro%2BPowerline%2BAwesome%2BRegular.ttf \
      > ${PA_FONT}
    fc-cache -v
  fi

  # Powerlevel10k
  do_git_update ~/.oh-my-zsh/custom/themes/powerlevel10k https://github.com/romkatv/powerlevel10k.git

  # ponysay
  if ! [ -d ~/ponysay ]; then
    ( git clone https://github.com/erkin/ponysay ~/ponysay && \
      cd ~/ponysay && \
      python3 setup.py --freedom=partial --private install && \
      /bin/mv -f ~/.local/bin/pony* ~/bin/ )
  else
    ( cd ~/ponysay && \
      git pull && \
      python3 setup.py --freedom=partial --private install && \
      /bin/mv -f ~/.local/bin/pony* ~/bin/ )
  fi
}

function install_prereqs_linux_arch() {
  echo "Installing prerequisites ..."
  sudo pacman -Syu --needed --noconfirm \
    exa \
    fortune-mod \
    gcc \
    glide \
    go-pie \
    golang-golang-x-tools \
    jq \
    python-pygments \
    zsh-syntax-highlighting

  install_prereqs_common

  # FiraCode Nerd Fonts for Powerlevel10k
  FC_FONT="${HOME}/.fonts/Fura Code Bold Nerd Font Complete.ttf"
  if ! [ -f ${FC_FONT} ]; then
    mkdir -p ~/.fonts
    TMP_ZIP="${HOME}/FiraCode.zip"
    curl -Ls https://github.com/ryanoasis/nerd-fonts/releases/download/v2.0.0/FiraCode.zip > ${TMP_ZIP} && \
      unzip -u -d ~/.fonts/ ${TMP_ZIP} && \
      /bin/rm -f ${TMP_ZIP}
    fc-cache -v
  fi

  # Powerlevel10k
  do_git_update ~/.oh-my-zsh/custom/themes/powerlevel10k https://github.com/romkatv/powerlevel10k.git

  # ponysay
  if ! [ -d ~/ponysay ]; then
    ( git clone https://github.com/erkin/ponysay ~/ponysay && \
      cd ~/ponysay && \
      python3 setup.py --freedom=partial --private install && \
      /bin/mv -f ~/.local/bin/pony* ~/bin/ )
  else
    ( cd ~/ponysay && \
      git pull && \
      python3 setup.py --freedom=partial --private install && \
      /bin/mv -f ~/.local/bin/pony* ~/bin/ )
  fi
}


# Check if we need to install software
if ! [ -f ${PREREQS} ]; then
  # We haven't done a prereq install if this file doesn't already exist
  install_prereqs_linux
else
  # The contents of the $PREREQS file will just be a build number. When the
  # prereqs need to be updated, $PREREQS_VERSION should be incremented.
  LAST_UPDATE=$(cat ${PREREQS})
  if [ "${LAST_UPDATE}" != "${PREREQS_VERSION}" ]; then
    install_prereqs_linux
  fi
fi;

################################################################################
# Aliases
################################################################################

alias cat="ccat"
alias ss="sudo --preserve-env=HOME -s"

################################################################################
# Environment Variables
################################################################################

ZSH_PLUGINS=(ansible colored-man-pages colorize common-aliases debian docker encode64 extract git jsontools ng node npm pip redis-cli screen sudo urltools vagrant vscode web-search zsh-autosuggestions)

ZSH_SYNTAX=/usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
egrep -i "(alpine|manjaro)" /etc/os-release 2>&1 >/dev/null && ZSH_SYNTAX=/usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

ZSH_THEME="powerlevel10k/powerlevel10k"
ZSH_COLORIZE_STYLE="friendly"

POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(root_indicator ssh background_jobs history time)

export PATH="${HOME}/.local/vim/bin:${PATH}"
